import os
import bpy
def keep_only_first_mesh():
  # different versions of blender sometimes return the wrong mesh
  objects = bpy.context.scene.objects
  if len(objects) <= 1:
    return
  
  try:
    # earlier than blender <2.8
    objects[-1].select = False
    for other in objects[:-1]:
      other.select = True
    bpy.ops.object.delete()
    objects[-1].select = True
  except AttributeError:
    # blender 2.8 changed this
    ob = objects[-1]
    ob.select_set(False)
    for other in objects[:-1]:
      other.select_set(True)
    bpy.ops.object.delete()
    objects[-1].select_set(True)

if __name__ == "__main__":
  # Clear scene of default box
  bpy.ops.wm.read_homefile()

  try:
    bpy.ops.object.mode_set(mode='OBJECT')
  except:
    pass
    
  bpy.ops.object.select_all(action='SELECT')
  bpy.ops.object.delete(use_global=True)
  
  mesh_pre  = $mesh_pre
  mesh_post = os.path.abspath(r'$mesh_post')

  # When you add objects to blender, other elements are pushed back
  # by going last to first on the filenames we can preserve the index relation
  for filename in mesh_pre[::-1]:
    bpy.ops.import_mesh.stl(filepath=os.path.abspath(filename))

  print('\n\nobjects', len(bpy.context.scene.objects))

  mesh  = bpy.context.scene.objects[0]
  for other in bpy.context.scene.objects[1:]:
    mod = mesh.modifiers.new('boolean', 'BOOLEAN') # add boolean modifier 
    mod.object = other
    mod.operation = '$operation'  
    bpy.ops.object.modifier_apply(modifier = 'boolean')
  
  keep_only_first_mesh()  
  bpy.ops.export_mesh.stl(filepath = mesh_post, 
                          use_mesh_modifiers = True)
